package lesson_10

/*Задача 4 к Уроку 10
Усовершенствуй игру, где пользователь и компьютер по очереди бросают кости. Побеждает выбросивший наибольшее число.
 Теперь дай возможность пользователю играть до тех пор пока ему не надоест.
 В конце программа должна вывести сколько партий он выиграл.
– логика бросков должна быть реализована по примеру из задачи 1;
– после первого раунда программа задает вопрос: “Хотите бросить кости еще раз Введите Да или Нет”;
– программа в зависимости от ответа запускает новый раунд или заканчивает игру с выводом количества
выйгрышных партий человека;
– в программе должно быть минимум 2 метода (для проведения раунда и для генерации значений брошенных кубиков);
– основная логика программы должна находиться в main(), а 2 другие функции будут вспомогательными.*/
fun main() {

    var allWin = 0 //счетчик побед
    do {
        val oneWin = determineWinner(winHuman = 0) //запускается функция вывода очков и счетчик побед
        allWin += oneWin //суммируются все победы человека

        /*----блок продолжения игры----*/
        println("Продолжить игру?")
        val isContinue = readln()
        val isContinueBoolean = when (isContinue.lowercase()) {
            "да" -> true
            "нет" -> false
            else -> false
        }/*----блок продолжения игры----*/

    } while (isContinueBoolean)
    println("Вы выиграли $allWin раз")
}

fun determineWinner(winHuman: Int): Int {
    val diceHuman = generateRandomNum()
    val diceComputer = generateRandomNum()
    println("У человека: $diceHuman, у компьютера: $diceComputer")

    return if (diceHuman > diceComputer) {
        winHuman + 1
    } else {
        winHuman
    }
}
fun generateRandomNum(): Int = (1..6).random() //понял!




